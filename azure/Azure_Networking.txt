az container create \
    --name dd-agent-02 \
    --resource-group MyContainers \
    --image datadog/agent:latest \
    --vnet myvnet-01 \
    --vnet-address-prefix 10.1.0.0/16 \
    --subnet mysubnet-01 \
    --subnet-address-prefix 10.1.0.0/24 \
	--ports 8126 \
	--cpu 1 --memory 1.5 \
	--subscription Pay-As-You-Go \
	--restart-policy OnFailure \
	--location westeurope \
	--environment-variables DD_API_KEY=57b752e8a4a68a1eafbd340a03bdbbb3 DD_APM_ENABLED=true DD_HOSTNAME=cl-2 DD_TAGS=CL-TAG DD_APM_NON_LOCAL_TRAFFIC=true DD_LOGS_ENABLED=true \
	--azure-file-volume-share-name containershare --azure-file-volume-account-name claudou --azure-file-volume-account-key SJH2STMwL7jrHGkQcWzVPdOVRp7Nk+qzodrICSXVSec5flUzzcTOy0hbIvasiQDESJwh+8GV9AHVgj01jErogA== --azure-file-volume-mount-path /conf.d

saves this as a script in the azure shell and then execute:
chmod +x ./create_container_01.sh
./create_container_01.sh

then I need to create the second container instance on the same vnet: use the second script ./create_container_02.sh
Verify that container instance 1 can ping instance 2

bash-4.2# curl https://10.1.0.4:8126
curl: (35) SSL received a record that exceeded the maximum permissible length.


https://docs.microsoft.com/en-us/cli/azure/container?view=azure-cli-latest#az-container-create

---
Datadog Env Variables:

DD_HOSTNAME
DD_TAGS
DD_APM_ENABLED


I need the tracing via port:
-p 8126:8126/tcp


----
1. docker-compose:

docker-compose config first will validate you yaml file

docker-compose pull
docker-compose build
docker images
we are interested in docker-compose-datadog_datadog

Environment variables are not working well if no attention.
this will provide a detailed json structure were one can inspect variables before hand:
docker inspect 5088733b7951



2. upload in the Azure Registry: (only once)
az acr create --resource-group MyContainers --name RegistryCL --sku Basic --admin-enabled true

3. create container fom registry
Login to registry
az acr login --name RegistryCL

get the name of the registry (only once)
az acr list --resource-group MyContainers --query "[].{acrLoginServer:loginServer}" --output table
which returns:
AcrLoginServer
---------------------
registrycl.azurecr.io



Tag the image:
docker tag docker-compose-datadog_datadog registrycl.azurecr.io/docker-compose-datadog_datadog:latest

Push the docker Image to Azure:
docker push registrycl.azurecr.io/docker-compose-datadog_datadog:latest

see the list:
az acr repository list --name registrycl --output table

we create a service principal: (only once)
see: https://docs.microsoft.com/en-us/azure/container-registry/container-registry-auth-service-principal
and script in azure folder


create a new instance based on the image in Azure: (run from Cloud shell if on windows!!)
az container create --resource-group MyContainers --name datadog-demo --image registrycl.azurecr.io/docker-compose-datadog_datadog:latest --cpu 1 --memory 1.5 --ports 8080 8000 80 \
	--subscription Pay-As-You-Go --restart-policy OnFailure --location westeurope \
	--dns-name-label cl-datadog-demo --ip-address public \
	--registry-login-server registrycl.azurecr.io \
    --registry-username 334cdc95-9890-4e70-a0ce-8a21f2d954e2 \
    --registry-password 4450644b-f9a6-407f-989e-b0f495e32f22 \
	--azure-file-volume-share-name containershare --azure-file-volume-account-name claudou --azure-file-volume-account-key SJH2STMwL7jrHGkQcWzVPdOVRp7Nk+qzodrICSXVSec5flUzzcTOy0hbIvasiQDESJwh+8GV9AHVgj01jErogA== --azure-file-volume-mount-path /conf.d

=>
Service principal ID: 334cdc95-9890-4e70-a0ce-8a21f2d954e2
Service principal password: 4450644b-f9a6-407f-989e-b0f495e32f22


when redoing, use docker ps and docker rmi to delete images !!

I can ping this:
cl-datadog-demo.westeurope.azurecontainer.io

I get the Public IP: 



********* HERE *****************

access the datadog container:

access the MySQL container:


4. updated and restart:

5. check Datadog Host:


6. check the MySQL Integration: